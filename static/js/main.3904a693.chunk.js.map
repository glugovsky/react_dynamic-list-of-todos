{"version":3,"sources":["api.ts","types/SortBy.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","SortBy","TodoList","todos","selectedTodo","onSelect","className","length","map","todo","cn","id","completed","title","type","onClick","TodoFilter","query","setQuery","sortBy","setSortBy","value","onChange","event","target","Completed","Active","All","placeholder","style","pointerEvents","Loader","TodoModal","handleClose","userId","useState","user","setUser","isUserLoaded","setIsUserLoaded","useEffect","getUser","userFromServer","catch","error","Error","href","email","name","App","setTodos","isLoaded","setIsLoaded","setSelectedTodo","selectTodo","useCallback","todosFromServer","filter","loweredQuery","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3904a693.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum SortBy {\n  All = 'all',\n  Completed = 'completed',\n  Active = 'active',\n}\n","import cn from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  onSelect: (todo: Todo) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  onSelect,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.length\n        ? todos.map((todo) => (\n          <tr\n            data-cy=\"todo\"\n            className={cn({\n              'has-background-info-light': todo.id === selectedTodo?.id,\n            })}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={cn({\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelect(todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={cn('far', {\n                      'fa-eye-slash': todo.id === selectedTodo?.id,\n                      'fa-eye': todo.id !== selectedTodo?.id,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))\n        : <tr><td>Data could not be loaded</td></tr>}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { SortBy } from '../../types/SortBy';\n\ninterface Props {\n  query: string;\n  setQuery: React.Dispatch<React.SetStateAction<string>>;\n  sortBy: SortBy;\n  setSortBy: React.Dispatch<React.SetStateAction<SortBy>>;\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  sortBy,\n  setSortBy,\n}) => {\n  const handleQueryInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const clearQueryInput = () => setQuery('');\n\n  const handleSortBy = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    switch (event.target.value) {\n      case SortBy.Completed:\n        setSortBy(SortBy.Completed);\n        break;\n\n      case SortBy.Active:\n        setSortBy(SortBy.Active);\n        break;\n\n      default:\n        setSortBy(SortBy.All);\n        break;\n    }\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={sortBy}\n            onChange={handleSortBy}\n          >\n            <option value={SortBy.All}>All</option>\n            <option value={SortBy.Active}>Active</option>\n            <option value={SortBy.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"Clear query\"\n              onClick={clearQueryInput}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\n\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ninterface Props {\n  selectedTodo: Todo;\n  handleClose: () => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  handleClose,\n}) => {\n  const {\n    userId,\n    id,\n    title,\n    completed,\n  } = selectedTodo;\n  const [user, setUser] = useState<User | null>(null);\n  const [isUserLoaded, setIsUserLoaded] = useState(false);\n\n  useEffect(() => {\n    getUser(userId)\n      .then((userFromServer) => {\n        setUser(userFromServer);\n        setIsUserLoaded(true);\n      })\n      .catch(error => {\n        throw new Error(error);\n      });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!isUserLoaded ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"Close todo modal\"\n              onClick={handleClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong className={cn({\n                'has-text-success': completed,\n                'has-text-danger': !completed,\n              })}\n              >\n                {completed\n                  ? 'Done'\n                  : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { getTodos } from './api';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { Todo } from './types/Todo';\nimport { SortBy } from './types/SortBy';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const [query, setQuery] = useState('');\n  const [sortBy, setSortBy] = useState<SortBy>(SortBy.All);\n\n  const selectTodo = useCallback((todo: Todo | null) => {\n    setSelectedTodo(todo);\n  }, []);\n\n  const filterTodos = () => {\n    const todosByQuery = todos.filter(({ title }) => {\n      const loweredQuery = query.toLowerCase();\n      const loweredTitle = title.toLowerCase();\n\n      return loweredTitle.includes(loweredQuery);\n    });\n\n    return todosByQuery.filter(({ completed }) => {\n      switch (sortBy) {\n        case SortBy.Completed:\n          return completed;\n\n        case SortBy.Active:\n          return !completed;\n\n        default:\n          return true;\n      }\n    });\n  };\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => {\n        setTodos(todosFromServer);\n        setIsLoaded(true);\n      })\n      .catch(error => {\n        throw new Error(error);\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                sortBy={sortBy}\n                setSortBy={setSortBy}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoaded\n                ? (\n                  <TodoList\n                    todos={filterTodos()}\n                    selectedTodo={selectedTodo}\n                    onSelect={selectTodo}\n                  />\n                ) : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          handleClose={() => selectTodo(null)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}